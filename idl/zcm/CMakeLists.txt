function(gen_zcm_idl BASENAME)
	list(APPEND GENERATED_HEADER_FILES ${CMAKE_CURRENT_BINARY_DIR}/idl/zcm/${BASENAME}.hpp)
	list(APPEND GENERATED_SOURCE_FILES ${CMAKE_CURRENT_BINARY_DIR}/${BASENAME}.cpp)
	
	set(GENERATED_HEADER_FILES ${GENERATED_HEADER_FILES} PARENT_SCOPE)
	set(GENERATED_SOURCE_FILES ${GENERATED_SOURCE_FILES} PARENT_SCOPE)

	add_custom_command(
		DEPENDS
			${CMAKE_CURRENT_SOURCE_DIR}/${BASENAME}.zcm
		OUTPUT 
			${CMAKE_CURRENT_BINARY_DIR}/idl/zcm/${BASENAME}.hpp
	    COMMAND
	    	zcm-gen -x --cpp-hpath idl/zcm ${CMAKE_CURRENT_SOURCE_DIR}/${BASENAME}.zcm 
	    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
			VERBATIM
	)

	add_custom_command(
		DEPENDS
			${CMAKE_CURRENT_SOURCE_DIR}/${BASENAME}.zcm
		OUTPUT 
			${CMAKE_CURRENT_BINARY_DIR}/${BASENAME}.cpp
	    COMMAND
	    	echo "#include \"idl/zcm/${BASENAME}.hpp\"" > ${CMAKE_CURRENT_BINARY_DIR}/${BASENAME}.cpp
	    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
			VERBATIM
	)

endfunction()

gen_zcm_idl(raw_frame_t)
gen_zcm_idl(heartbeat_t)

add_library(opaleye-zcm-idl SHARED
    ${GENERATED_HEADER_FILES}
    ${GENERATED_SOURCE_FILES}
)

target_include_directories(opaleye-zcm-idl PUBLIC
	${CMAKE_CURRENT_BINARY_DIR}
)